<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- socket池配置信息对象 -->
	<bean id="poolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
		<!-- 最大空闲数 -->
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<!-- 最小空闲数 -->
		<property name="minIdle" value="${redis.pool.minIdle}" />
		<!-- 对象池最大值 -->
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<!-- 回收资源线程的执行周期，单位毫秒。默认值 -1 ，-1 表示不启用线程回收资源 -->
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<!-- 当资源耗尽时，是否阻塞等待获取资源。 默认值 true -->
		<property name="blockWhenExhausted" value="${redis.pool.blockWhenExhausted}" />
		<!-- 获取资源时的等待时间，单位毫秒。当 blockWhenExhausted 配置为 true 时，此值有效。 -1 代表无时间限制，一直阻塞直到有可用的资源。 -->
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
		<!--对拿到的connection进行validateObject校验 -->
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
		<!--在进行returnObject对返回的connection进行validateObject校验 -->
		<property name="testOnReturn" value="${redis.pool.testOnReturn}" />
		<!--定时对线程池中空闲的链接进行validateObject校验 -->
		<property name="testWhileIdle" value="${redis.pool.testWhileIdle}" />
	</bean>

	<!-- socket池对象 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
		<!-- 连接池配置对象 -->
		<constructor-arg index="0" ref="poolConfig" />
		<!-- 主机地址 -->
		<constructor-arg index="1" value="${redis.host}" />
		<!-- 主机端口 -->
		<constructor-arg index="2" value="${redis.port}" />
		<!-- 超时时间 -->
		<constructor-arg index="3" value="${redis.timeout}" />
		<!-- 连接密码 -->
		<constructor-arg index="4" value="${redis.password}" />
	</bean>
	
	<bean id="jedisSrvc" class="com.dl.common.framework.redis.RedisService">
		<constructor-arg index="0" ref="jedisPool"/>
	</bean>
</beans>