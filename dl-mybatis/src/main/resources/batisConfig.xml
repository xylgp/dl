<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<settings>
		<!-- 这个配置使全局的映射器启用或禁用 缓存 -->
		<setting name="cacheEnabled" value="true" />
		<!-- 全局启用或禁用延迟加载。当禁用时, 所有关联对象都会即时加载 -->
		<setting name="lazyLoadingEnabled" value="true" />
		<!-- 允许或不允许多种结果集从一个单独 的语句中返回(需要适合的驱动) -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 使用列标签代替列名。 不同的驱动在这 方便表现不同。 参考驱动文档或充分测 试两种方法来决定所使用的驱动 -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许 JDBC 支持生成的键。 需要适合的 驱动。 如果设置为 true 则这个设置强制 生成的键被使用, 尽管一些驱动拒绝兼 容但仍然有效(比如 
			Derby) -->
		<setting name="useGeneratedKeys" value="false" />
		<!-- 配置默认的执行器。SIMPLE 执行器没 有什么特别之处。REUSE 执行器重用 预处理语句。BATCH 执行器重用语句 和批量更新 -->
		<setting name="defaultExecutorType" value="SIMPLE" />
		<!-- 设置超时时间, 它决定驱动等待一个数 据库响应的时间 -->
		<setting name="defaultStatementTimeout" value="100" />
		<setting name="safeRowBoundsEnabled" value="false" />
		<setting name="mapUnderscoreToCamelCase" value="false" />
		<setting name="localCacheScope" value="SESSION" />
		<setting name="jdbcTypeForNull" value="OTHER" />
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />
		<!--设置日志-->
		<setting name="logImpl" value="STDOUT_LOGGING"/>
		<!-- <setting name="logImpl" value="LOG4J"/> -->
	</settings>
	<!-- <typeAliases>
		<typeAlias alias="Channel" type="com.dl.common.model.entity.story.Channel"/>
		<typeAlias alias="Story" type="com.dl.common.model.entity.story.Story"/>
		<typeAlias alias="StoryChannel" type="com.dl.common.model.entity.story.StoryChannel"/>
		<typeAlias alias="StoryOutline" type="com.dl.common.model.entity.story.StoryOutline"/>
		<typeAlias alias="MenuAuth" type="com.dl.common.model.entity.user.MenuAuth"/>
		<typeAlias alias="MenuChild" type="com.dl.common.model.entity.user.MenuChild"/>
		<typeAlias alias="MenuGroup" type="com.dl.common.model.entity.user.MenuGroup"/>
		<typeAlias alias="Role" type="com.dl.common.model.entity.user.Role"/>
		<typeAlias alias="RoleAuth" type="com.dl.common.model.entity.user.RoleAuth"/>
		<typeAlias alias="User" type="com.dl.common.model.entity.user.User"/>
		<typeAlias alias="UserChannel" type="com.dl.common.model.entity.user.UserChannel"/>
		<typeAlias alias="UserRole" type="com.dl.common.model.entity.user.UserRole"/>
		<typeAlias alias="ChannelResponse" type="com.dl.common.model.app.req.ChannelResponse"/>
	
	</typeAliases> -->
	<!-- <mappers>
		<mapper resource="mappers/ChannelMapper.xml" />
		<mapper resource="mappers/MenuAuthMapper.xml" />
		<mapper resource="mappers/MenuChildMapper.xml" />
		<mapper resource="mappers/MenuGroupMapper.xml" />
		<mapper resource="mappers/RoleAuthMapper.xml" />
		<mapper resource="mappers/RoleMapper.xml" />
		<mapper resource="mappers/StoryChannelMapper.xml" />
		<mapper resource="mappers/StoryMapper.xml" />
		<mapper resource="mappers/StoryOutlineMapper.xml" />
		<mapper resource="mappers/UserChannelMapper.xml" />
		<mapper resource="mappers/UserMapper.xml" />
		<mapper resource="mappers/UserRoleMapper.xml" />
	</mappers> -->
</configuration>